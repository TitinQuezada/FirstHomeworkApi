// <auto-generated />
using System;
using Boundaries.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Boundaries.Persistence.Migrations
{
    [DbContext(typeof(FristHomeworkDbContext))]
    partial class FristHomeworkDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Models.ApplicationUser", b =>
                {
                    b.Property<string>("IdentificationNumber")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11);

                    b.Property<int?>("AddressUserAddressId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("PhoneUserPhoneId")
                        .HasColumnType("int");

                    b.Property<int?>("RoleUserRoleId")
                        .HasColumnType("int");

                    b.HasKey("IdentificationNumber");

                    b.HasIndex("AddressUserAddressId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneUserPhoneId");

                    b.HasIndex("RoleUserRoleId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("Core.Models.Municipality", b =>
                {
                    b.Property<int>("MunicipalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("MunicipalityId");

                    b.ToTable("Municipalities");

                    b.HasData(
                        new
                        {
                            MunicipalityId = 1,
                            Description = "Santo Domingo Norte"
                        },
                        new
                        {
                            MunicipalityId = 2,
                            Description = "Santo Domingo Oeste"
                        },
                        new
                        {
                            MunicipalityId = 3,
                            Description = "Santo Domingo Este"
                        },
                        new
                        {
                            MunicipalityId = 4,
                            Description = "Boca Chica"
                        },
                        new
                        {
                            MunicipalityId = 5,
                            Description = "Los Alcarrisos"
                        },
                        new
                        {
                            MunicipalityId = 6,
                            Description = "Pedro Brand"
                        },
                        new
                        {
                            MunicipalityId = 7,
                            Description = "San Antonio de Guerra"
                        },
                        new
                        {
                            MunicipalityId = 8,
                            Description = "San Luis"
                        });
                });

            modelBuilder.Entity("Core.Models.UserAddress", b =>
                {
                    b.Property<int>("UserAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("MunicipalityId")
                        .HasColumnType("int");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("UserAddressId");

                    b.HasIndex("MunicipalityId");

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("Core.Models.UserPhone", b =>
                {
                    b.Property<int>("UserPhoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("UserPhoneId");

                    b.ToTable("UserPhones");
                });

            modelBuilder.Entity("Core.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            Description = "Admisnistrator"
                        },
                        new
                        {
                            UserRoleId = 2,
                            Description = "Client"
                        });
                });

            modelBuilder.Entity("Core.Models.ApplicationUser", b =>
                {
                    b.HasOne("Core.Models.UserAddress", "Address")
                        .WithMany()
                        .HasForeignKey("AddressUserAddressId");

                    b.HasOne("Core.Models.UserPhone", "Phone")
                        .WithMany()
                        .HasForeignKey("PhoneUserPhoneId");

                    b.HasOne("Core.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleUserRoleId");
                });

            modelBuilder.Entity("Core.Models.UserAddress", b =>
                {
                    b.HasOne("Core.Models.Municipality", "Municipality")
                        .WithMany()
                        .HasForeignKey("MunicipalityId");
                });
#pragma warning restore 612, 618
        }
    }
}
